<project name="Database" default="none" xsi:schemaLocation="http://broloco.atlanta/nant.xsd ..\..\..\..\SDKs\nant-0.86\schema\nant.xsd" xmlns="http://broloco.atlanta/nant.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

    <include buildfile="${build.includes.file}" />


    <target name="onBuild">

        <uptodate property="database.flg.uptodate">
            <sourcefiles>
                <include name="${build.dir}/bin/Atlanta.Application.Domain.dll" />
                <include name="CustomPreCreate.ddl" />
                <include name="CustomPostCreate.ddl" />
                <include name="Populate.dml" />
            </sourcefiles>
            <targetfiles>
                <include name="${build.dir}/results/database.flg"/>
            </targetfiles>
        </uptodate>

        <echo message="flag file up to date: ${database.flg.uptodate}"/>

        <if test="${not database.flg.uptodate}">

            <echo message="Bulding database"/>

            <call target="onClean" />


            <exec   program="isql.exe"
                    commandline="-q -b -i CustomPreCreate.ddl" />

            <move
                file="LendingLibrary.fdb"
                todir="${build.dir}"
                overwrite="true"
                />

            <property name="hbm2ddl.ConnectionProvider" value="NHibernate.Connection.DriverConnectionProvider" />
            <property name="hbm2ddl.Dialect"            value="NHibernate.Dialect.FirebirdDialect" />
            <property name="hbm2ddl.ConnectionDriver"   value="NHibernate.Driver.FirebirdClientDriver" />
            <property name="hbm2ddl.ConnectionString"   value="User=SYSDBA;Password=masterkey;Database=${build.dir}/LendingLibrary.fdb;ServerType=1;Pooling=false;" />
            <property name="hbm2ddl.OutputMappings"     value="${build.dir}/design/Mappings" />
            <property name="hbm2ddl.OutputFileName"     value="${build.dir}/design/Database.ddl" />
            <mkdir dir="${hbm2ddl.OutputMappings}" />

            <script language="C#" >
                <references>
                    <include name="${build.dir}/bin/NHibernate.dll" />
                    <include name="${build.dir}/bin/FluentNHibernate.dll" />
                    <include name="${build.dir}/bin/Atlanta.Application.Domain.dll" />
                </references>
                <imports>
                    <import namespace="System.Collections.Generic" />
                    <import namespace="System.Reflection" />
                    <import namespace="NHibernate.Cfg" />
                    <import namespace="NHibernate.Tool.hbm2ddl" />
                    <import namespace="NHibernate.Cfg" />
                    <import namespace="FluentNHibernate.Automapping" />
                    <import namespace="Atlanta.Application.Domain.DomainBase" />
                </imports>
                <code>
                    <![CDATA[

                public static void ScriptMain(Project project)
                {
                    Configuration config = new Configuration();
                    Dictionary<string, string> properties = new Dictionary<string, string>();

                    properties[NHibernate.Cfg.Environment.ConnectionProvider] = project.Properties["hbm2ddl.ConnectionProvider"];
                    properties[NHibernate.Cfg.Environment.Dialect] = project.Properties["hbm2ddl.Dialect"];
                    properties[NHibernate.Cfg.Environment.ConnectionDriver] = project.Properties["hbm2ddl.ConnectionDriver"];
                    properties[NHibernate.Cfg.Environment.ConnectionString] = project.Properties["hbm2ddl.ConnectionString"];
                    config.AddProperties(properties);
                    
                    AutoPersistenceModel model = Repository.ConfigureMapping(config);
                    model.WriteMappingsTo(project.Properties["hbm2ddl.OutputMappings"]);

                    SchemaExport schemaExport = new SchemaExport(config);
                    schemaExport.SetOutputFile(project.Properties["hbm2ddl.OutputFileName"]);
                    schemaExport.SetDelimiter(";");
                    schemaExport.Execute(   false,  // output to console
                                            true,   // export only
                                            false); // drop only
                }

            ]]>
                </code>
            </script>

            <exec   program="isql.exe"
                    commandline="-b -i &quot;${build.dir}/design/Database.ddl&quot; -u SYSDBA -p masterkey &quot;${build.dir}/LendingLibrary.fdb&quot;" />

            <exec   program="isql.exe"
                    commandline="-b -i CustomPostCreate.ddl -u SYSDBA -p masterkey &quot;${build.dir}/LendingLibrary.fdb&quot;" />

            <!-- create an integration test database with some standing data to integration test through the front-end -->
            <copy   file="${build.dir}/LendingLibrary.fdb"
                    tofile="${build.dir}/LendingLibraryIntegrationTest.fdb"
                    />

            <exec   program="isql.exe"
                    commandline="-b -i Populate.dml -u SYSDBA -p masterkey &quot;${build.dir}/LendingLibraryIntegrationTest.fdb&quot;" />

            <touch file="${build.dir}/results/database.flg" />

        </if>

    </target>


    <target name="onClean">

        <delete file="LendingLibrary.fdb" />

    </target>

</project>
