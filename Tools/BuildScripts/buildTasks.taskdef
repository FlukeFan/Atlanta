<project name="buildTasks" xsi:schemaLocation="http://broloco.atlanta/nant.xsd ..\..\SDKs\nant-0.86\schema\nant.xsd" xmlns="http://broloco.atlanta/nant.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

    <taskdef name="cscLibrary">

        <stringparams>
            <stringparam name="output" />
        </stringparams>

        <nodeparams>
            <nodeparam name="references" />
            <nodeparam name="sources" />
            <nodeparam name="resources" />
        </nodeparams>

        <do>

            <echo message="Compiling library [__output__.dll]" />

            <csc    target="library"
                    debug="${build.debug}"
                    optimize="${optimize}"
                    output="${build.dir}/bin/__output__.dll"
                    warnaserror="true"
                    doc="${build.dir}/bin/__output__.xml">

                <references>
                    <__references__/>
                </references>

                <sources>
                    <include name="${project.assemblyVersionFile}" />

                    <__sources__/>
                </sources>

                <resources>
                    <__resources__/>
                </resources>

            </csc>

        </do>

    </taskdef>


    <taskdef name="cscLibraryTest">

        <stringparams>
            <stringparam name="output" />
            <stringparam name="configFile" />
        </stringparams>

        <nodeparams>
            <nodeparam name="references" />
            <nodeparam name="sources" />
            <nodeparam name="resources" />
        </nodeparams>

        <do>

            <echo message="Compiling library tests [__output__.dll]"/>

            <csc    target="library"
                    debug="${build.debug}"
                    optimize="${optimize}"
                    output="${build.dir}/bin/__output__.dll"
                    warnaserror="true">

                <references>
                    <__references__/>
                </references>

                <sources>
                    <include name="${project.assemblyVersionFile}" />

                    <__sources__/>
                </sources>

                <resources>
                    <__resources__/>
                </resources>

            </csc>

            <copy
                file="__configFile__"
                todir="${build.dir}/bin"
                />

        </do>

    </taskdef>


    <taskdef name="generateStaticProperties">

        <stringparams>
            <stringparam name="outputFolder" />
            <stringparam name="generateSuccessFlagFile" />
        </stringparams>

        <nodeparams>
            <nodeparam name="mappingFiles" />
        </nodeparams>

        <do>

            <property name="generateSuccessFlagFileWithPath" value="${build.dir}/results/__generateSuccessFlagFile__"/>
            <echo message="Code generating static properties to [__outputFolder__]" />

            <uptodate property="generated.files.uptodate">
                <sourcefiles>
                    <include name="${project.dir}/Tools/Templates/*.tt" />
                    <__mappingFiles__/>
                </sourcefiles>
                <targetfiles>
                    <include name="${generateSuccessFlagFileWithPath}"/>
                </targetfiles>
            </uptodate>

            <echo message="flag file up to date: ${generated.files.uptodate}"/>

            <if test="${not generated.files.uptodate}">

                <foreach item="File" property="mappingFile">
                    <in>
                        <items>
                            <__mappingFiles__/>
                        </items>
                    </in>
                    <do>
                        <property name="generatedFile" value="__outputFolder__/${path::get-file-name(mappingFile)}.cs" />
                        <echo message="Processing ${mappingFile} to ${generatedFile}" />

                        <exec program="TextTransform">
                            <arg line="-a mappingFile!${mappingFile}" />
                            <arg line="-out ${generatedFile}" />
                            <arg line="${project.dir}/Tools/Templates/StaticProperties.tt" />
                        </exec>
                    </do>
                </foreach>

                <touch file="${generateSuccessFlagFileWithPath}" />

            </if>

        </do>

    </taskdef>

    <taskdef name="generateDomainDtos">

        <stringparams>
            <stringparam name="outputFolder" />
            <stringparam name="modelAssembly" />
            <stringparam name="dtoConfig" />
        </stringparams>

        <do>

            <echo message="Code generating Domain DTOs to [__outputFolder__]" />

            <uptodate property="generated.files.uptodate">
                <sourcefiles>
                    <include name="__modelAssembly__" />
                    <include name="__dtoConfig__" />
                </sourcefiles>
                <targetfiles>
                    <include name="__outputFolder__/GenerateSilverlightDtos.flg" />
                </targetfiles>
            </uptodate>

            <echo message="flag file up to date: ${generated.files.uptodate}"/>

            <if test="${not generated.files.uptodate}">
            
                <delete dir="__outputFolder__" />
                <mkdir dir="__outputFolder__" />
                <exec program="TextTransform">
                    <arg line="-a ModelAssembly!&quot;__modelAssembly__&quot;" />
                    <arg line="-a DtoConfig!&quot;__dtoConfig__&quot;" />
                    <arg line="-a OutputFolder!&quot;__outputFolder__&quot;" />
                    <arg line="${project.dir}/Tools/Templates/GenerateSilverlightDtos.tt" />
                </exec>
        
            </if>

        </do>

    </taskdef>

    <taskdef name="generateSilverlightServices">

        <stringparams>
            <stringparam name="outputFolder" />
            <stringparam name="serviceAssembly" />
        </stringparams>

        <do>

            <echo message="Code generating Silverlight services to [__outputFolder__]" />

            <uptodate property="generated.files.uptodate">
                <sourcefiles>
                    <include name="__serviceAssembly__" />
                </sourcefiles>
                <targetfiles>
                    <include name="__outputFolder__/GenerateSilverlightServices.flg" />
                </targetfiles>
            </uptodate>

            <echo message="flag file up to date: ${generated.files.uptodate}"/>

            <if test="${not generated.files.uptodate}">
            
                <delete dir="__outputFolder__" />
                <mkdir dir="__outputFolder__" />
                <exec program="TextTransform">
                    <arg line="-a ServiceAssembly!&quot;__serviceAssembly__&quot;" />
                    <arg line="-a OutputFolder!&quot;__outputFolder__&quot;" />
                    <arg line="${project.dir}/Tools/Templates/GenerateSilverlightServices.tt" />
                </exec>
        
            </if>

        </do>

    </taskdef>

</project>


