<project>

    <taskdef name="cscLibrary">

        <stringparams>
            <stringparam name="output" />
        </stringparams>

        <nodeparams>
            <nodeparam name="references" />
            <nodeparam name="sources" />
            <nodeparam name="resources" />
        </nodeparams>

        <do>

            <echo message="Compiling library [__output__.dll]" />

            <csc    target="library"
                    debug="${build.debug}"
                    optimize="${optimize}"
                    output="${build.dir}/bin/__output__.dll"
                    warnaserror="true"
                    doc="${build.dir}/bin/__output__.xml">

                <references>
                    <__references__/>
                </references>

                <sources>
                    <include name="${project.assemblyVersionFile}" />

                    <__sources__/>
                </sources>

                <resources>
                    <__resources__/>
                </resources>

            </csc>

        </do>

    </taskdef>


    <taskdef name="cscLibraryTest">

        <stringparams>
            <stringparam name="output" />
            <stringparam name="configFile" />
        </stringparams>

        <nodeparams>
            <nodeparam name="references" />
            <nodeparam name="sources" />
            <nodeparam name="resources" />
        </nodeparams>

        <do>

            <echo message="Compiling library tests [__output__.dll]"/>

            <csc    target="library"
                    debug="${build.debug}"
                    optimize="${optimize}"
                    output="${build.dir}/bin/__output__.dll"
                    warnaserror="true">

                <references>
                    <__references__/>
                </references>

                <sources>
                    <include name="${project.assemblyVersionFile}" />

                    <__sources__/>
                </sources>

                <resources>
                    <__resources__/>
                </resources>

            </csc>

            <copy
                file="__configFile__"
                todir="${build.dir}/bin"
                />

        </do>

    </taskdef>


    <taskdef name="generateStaticProperties">

        <stringparams>
            <stringparam name="outputFolder" />
        </stringparams>

        <nodeparams>
            <nodeparam name="mappingFiles" />
        </nodeparams>

        <do>

            <echo message="Code generating static properties to [__outputFolder__]" />
          
            <uptodate property="generated.files.uptodate">
                <sourcefiles>
                        <__mappingFiles__/>
                </sourcefiles>
                <targetfiles>
                    <include name="__outputFolder__/*.cs"/>
                </targetfiles>
            </uptodate>

            <echo message="Generated files up to date: ${generated.files.uptodate}"/>

            <if test="${not generated.files.uptodate}">

                <foreach item="File" property="mappingFile">
                    <in>
                        <items>
                            <__mappingFiles__/>
                        </items>
                    </in>
                    <do>
                        <property name="generatedFile" value="__outputFolder__/${path::get-file-name(mappingFile)}.cs" />
                        <echo message="Processing ${mappingFile} to ${generatedFile}" />

                        <exec program="TextTransform">
                            <arg line="-a mappingFile!${mappingFile}" />
                            <arg line="-out ${generatedFile}" />
                            <arg line="${project.dir}/Tools/Templates/StaticProperties.tt" />
                        </exec>
                    </do>
                </foreach>

            </if>

        </do>

    </taskdef>

</project>


